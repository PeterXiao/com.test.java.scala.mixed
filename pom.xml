<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.test.protools.demo</groupId>
	<artifactId>com.test.Java.Scala.mixed</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<jdk.version>1.8</jdk.version>
		<scala.version>2.12.4</scala.version>
		<scala.maven.version>2.11.1</scala.maven.version>
		<kotlin.version>1.2.30</kotlin.version>
		<groovy.version>2.4.14</groovy.version>
		<!-- 1.10.0-alpha4 -->
		<Clojure.version>1.9.0</Clojure.version>



		<jackson.version>2.4.2</jackson.version>
		<slf4j.version>1.7.7</slf4j.version>

		<aspectj.version>1.8.13</aspectj.version>



	</properties>

	<repositories>
		<repository>
			<id>Sonatype</id>
			<name>Sonatype Repository</name>
			<url>http://repository.sonatype.org/content/groups/public/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>artima</id>
			<name>Artima Maven Repository</name>
			<url>http://repo.artima.com/releases</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/junit/junit test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalactic</groupId>
			<artifactId>scalactic_2.12</artifactId>
			<version>3.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.12</artifactId>
			<version>3.0.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<dependency>
			<groupId>org.clojure</groupId>
			<artifactId>clojure</artifactId>
			<version>${Clojure.version}</version>
		</dependency>


		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
		</dependency>



		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jre8</artifactId>
			<version>${kotlin.version}</version>
		</dependency>








		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.12</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.14.2</version>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${java.io.tmpdir}/${project.groupId}.${project.artifactId}</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>copy-resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<recompileMode>incremental</recompileMode>
					<args>
						<arg>-target:jvm-1.8</arg>
					</args>
					<javacArgs>
						<javacArg>-source</javacArg>
						<javacArg>1.8</javacArg>
						<javacArg>-target</javacArg>
						<javacArg>1.8</javacArg>
					</javacArgs>
					<compilerPlugins>
						<compilerPlugin>
							<groupId>com.artima.supersafe</groupId>
							<artifactId>supersafe_2.12.4</artifactId>
							<version>1.1.3</version>
						</compilerPlugin>
					</compilerPlugins>
				</configuration>
				<executions>
					<execution>
						<id>scala-compile</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<groupId>com.theoryinpractise</groupId>
				<artifactId>clojure-maven-plugin</artifactId>
				<version>1.8.1</version>
				<executions>
					<execution>
						<id>compile-clojure</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>test-compile-clojure</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>kotlin-maven-plugin</artifactId>
				<configuration>
					<!--<failOnMissingWebXml>false</failOnMissingWebXml> -->
				</configuration>
				<groupId>org.jetbrains.kotlin</groupId>
				<version>${kotlin.version}</version>
				<executions>
					<execution>
						<id>compile</id>
						<phase>process-sources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<source>src/main/clojure</source>
								<source>src/main/java</source>
								<source>src/main/kotlin</source>
								<source>src/main/resources</source>
								<source>src/main/scala</source>

							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<phase>process-test-sources</phase>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<source>src/test/java</source>
								<source>src/test/kotlin</source>
								<source>src/test/resources</source>
								<source>src/test/scala</source>
								<source>src/test/clojure</source>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
				<!-- <executions> <execution> <id>compile</id> <goals> <goal>compile</goal> 
					</goals> <configuration> <sources> <source>src/main/kotlin</source> </sources> 
					</configuration> </execution> <execution> <id>test-compile</id> <goals> <goal>test-compile</goal> 
					</goals> <configuration> <sources> <source>src/test/kotlin</source> </sources> 
					</configuration> </execution> </executions> -->
			</plugin>




			<!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> 
				<version>3.0</version> <configuration> <compilerId>groovy-eclipse-compiler</compilerId> 
				<verbose>true</verbose> </configuration> <dependencies> <dependency> <groupId>org.codehaus.groovy</groupId> 
				<artifactId>groovy-eclipse-compiler</artifactId> <version>2.8.0-01</version> 
				</dependency> <dependency> <groupId>org.codehaus.groovy</groupId> <artifactId>groovy-eclipse-batch</artifactId> 
				<version>2.1.5-03</version> </dependency> </dependencies> </plugin> -->
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.6</version>
				<!-- <configuration> <stubsOutputDirectory>${java.io.tmpdir}/${project.groupId}.${project.artifactId}/stubs</stubsOutputDirectory> 
					<testStubsOutputDirectory>${java.io.tmpdir}/${project.groupId}.${project.artifactId}/test-stubs</testStubsOutputDirectory> 
					</configuration> -->
				<executions>
					<execution>

						<goals>
							<goal>addSources</goal>
							<goal>addTestSources</goal>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>generateTestStubs</goal>
							<goal>compileTests</goal>
							<goal>removeStubs</goal>
							<goal>removeTestStubs</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerId>groovy-eclipse-compiler</compilerId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.1-01</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.3.7-01</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<!-- <version>3.0.0</version> -->
				<executions>
					<!-- Add src/main/scala to source path of Eclipse -->
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
								<source>src/main/groovy</source>
								<source>src/main/kotlin</source>
								<source>src/main/clojure</source>
							</sources>
						</configuration>
					</execution>

					<!-- Add src/test/scala to test source path of Eclipse -->
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
								<source>src/test/groovy</source>
								<source>src/test/kotlin</source>
								<source>src/test/clojure</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-eclipse-plugin</artifactId> -->
			<!-- <version>2.10</version> -->
			<!-- <configuration> -->
			<!-- <additionalProjectnatures> -->
			<!-- <projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature> -->
			<!-- </additionalProjectnatures> -->
			<!-- <sourceIncludes> -->
			<!-- <sourceInclude>**/*.groovy</sourceInclude> -->
			<!-- </sourceIncludes> -->
			<!-- <downloadSources>true</downloadSources> -->
			<!-- <downloadJavadocs>true</downloadJavadocs> -->
			<!-- </configuration> -->
			<!-- </plugin> -->


			<!-- to generate Eclipse artifacts for projects mixing Scala and Java -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<projectnatures>
						<projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
					</projectnatures>
					<buildcommands>
						<buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<classpathContainers>
						<classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<excludes>
						<!-- in Eclipse, use scala-library, scala-compiler from the SCALA_CONTAINER 
							rather than POM <dependency> -->
						<exclude>org.scala-lang:scala-library</exclude>
						<exclude>org.scala-lang:scala-compiler</exclude>
					</excludes>
					<sourceIncludes>
						<sourceInclude>**/*.scala</sourceInclude>
						<sourceInclude>**/*.java</sourceInclude>
					</sourceIncludes>
				</configuration>
			</plugin>
			<!-- When run tests in the test phase, include .java and .scala source 
				files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<includes>
						<include>**/*.java</include>
						<include>**/*.scala</include>
					</includes>
					<testFailureIgnore>true</testFailureIgnore>
					<argLine>
						-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
					</argLine>
					<!-- 使allure-results在target文件夹下（很重要） jenkins必须 <workingDirectory>target/</workingDirectory> -->
					<!-- <properties> <property> <name>listener</name> <value>io.qameta.allure.testng.AllureTestNg</value> 
						</property> </properties> <systemProperties> <property> <name>allure.results.directory</name> 
						<value>${project.build.directory}/allure-results</value> </property> <property> 
						<name>junit.jupiter.extensions.autodetection.enabled</name> <value>true</value> 
						</property> </systemProperties> -->

				</configuration>
				<dependencies>
					<!-- <dependency> <groupId>org.apache.maven.surefire</groupId> <artifactId>surefire-junit47</artifactId> 
						<version>2.18</version> </dependency> <dependency> <groupId>org.apache.maven.surefire</groupId> 
						<artifactId>surefire-testng</artifactId> <version>2.18</version> </dependency> -->
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-testng</artifactId>
						<version>2.18</version>
					</dependency>
					<!-- https://mvnrepository.com/artifact/org.testng/testng -->
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>

			</plugin>
			<!-- disable surefire -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
				<version>2.7</version> <configuration> <skipTests>true</skipTests> </configuration> 
				</plugin> <plugin> <groupId>org.scalatest</groupId> <artifactId>scalatest-maven-plugin</artifactId> 
				<version>1.0</version> <configuration> <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory> 
				<junitxml>.</junitxml> <filereports>WDF TestSuite.txt</filereports> </configuration> 
				<executions> <execution> <id>test</id> <goals> <goal>test</goal> </goals> 
				</execution> </executions> </plugin> -->
			<!-- enable scalatest -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.alchim31.maven
										</groupId>
										<artifactId>
											scala-maven-plugin
										</artifactId>
										<versionRange>
											[3.3.1,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.theoryinpractise
										</groupId>
										<artifactId>
											clojure-maven-plugin
										</artifactId>
										<versionRange>
											[1.8.1,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.gmavenplus
										</groupId>
										<artifactId>
											gmavenplus-plugin
										</artifactId>
										<versionRange>
											[1.6.0,)
										</versionRange>
										<goals>
											<goal>addSources</goal>
											<goal>addTestSources</goal>
											<goal>generateStubs</goal>
											<goal>compile</goal>
											<goal>generateTestStubs</goal>
											<goal>compileTests</goal>
											<goal>removeStubs</goal>
											<goal>removeTestStubs</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<version>2.9</version>
			</plugin>
		</plugins>
	</reporting>
</project>  